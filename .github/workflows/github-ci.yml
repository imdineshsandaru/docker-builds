name: Build and push Docker image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      docker_registry: docker.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check Docker version
        run: docker version

      - name: Configure Docker credentials
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Read YAML file
        run: |
          IMAGES=$(cat config.yml | jq -r '.images[] | @base64')

      - name: Build and push Docker images
        run: |
          for IMAGE in $IMAGES; do
            _jq() {
              echo ${IMAGE} | base64 --decode | jq -r ${1}
            }

            IMAGE_NAME=$(_jq '.name')
            PATH=$(_jq '.path')
            VERSION=$(_jq '.version')

            # Check if image with version exists in registry
            if docker manifest inspect $DOCKER_REGISTRY/$IMAGE_NAME:$VERSION > /dev/null 2>&1; then
              echo "Image $DOCKER_REGISTRY/$IMAGE_NAME:$VERSION already exists. Skipping build and push."
            else
              # Build and push Docker image
              docker build -t $DOCKER_REGISTRY/$IMAGE_NAME:$VERSION $PATH
              docker push $DOCKER_REGISTRY/$IMAGE_NAME:$VERSION
            fi
          done

#       - name: Build the Docker image
#         run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
